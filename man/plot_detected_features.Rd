% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_plots.R
\name{plot_detected_features}
\alias{plot_detected_features}
\title{Genes/Transcripts Detected}
\usage{
plot_detected_features(
  experiment,
  samples = "all",
  data_type = c("tss", "tsr"),
  threshold = NULL,
  dominant = FALSE,
  use_normalized = FALSE,
  data_conditions = NULL,
  return_table = FALSE,
  ...
)
}
\arguments{
\item{experiment}{TSRexploreR object.}

\item{samples}{A vector of sample names to analyze.}

\item{data_type}{Whether TSSs or TSRs should be analyzed.}

\item{threshold}{TSSs or TSRs with a score below this value will not be considered.}

\item{dominant}{If TRUE, will only consider the highest-scoring TSS per gene, transcript, or TSR or 
highest-scoring TSR per gene or transcript.}

\item{use_normalized}{Whether to use the normalized (TRUE) or raw (FALSE) counts.}

\item{data_conditions}{Apply advanced conditions to the data.}

\item{return_table}{Return a table of results instead of a plot.}

\item{...}{Arguments passed to geom_col.}
}
\value{
DataFrame of detected feature numbers.
}
\description{
Get the number of genes or transcripts with an associated unique TSS or TSR.
}
\details{
This function will returnthe number of genes or transcripts with an associated 
unique TSS or TSR. Information on whether the feature has a promoter-proximal 
TSS or TSR is included in the output for plotting purposes.

A set of functions to control data structure for plotting are included. 'use_normalized' 
will use  normalized scores, which only matters if 'consider_score' is TRUE.
'threshold' defines the minimum number of raw counts a TSS or TSR must have to be 
considered. dominant' specifies whether only the dominant TSS or TSR (determined
using the 'mark_dominant' function) is considered. For TSSs, this can be either 
dominant TSS per TSR or gene/transcript, and for TSRs it is the dominant TSR 
per gene/transcript. 'data_conditionals' can be used to filter, quantile, order, 
and/or group data for plotting.
}
\examples{
TSSs <- system.file("extdata", "S288C_TSSs.RDS", package="TSRexploreR")
TSSs <- readRDS(TSSs)
exp <- tsr_explorer(TSSs)
exp <- format_counts(exp, data_type="tss")
annotation <- system.file("extdata", "S288C_Annotation.gtf", package="TSRexploreR")
exp <- annotate_features(
  exp, annotation_data=annotation,
  data_type="tss", feature_type="transcript"
)
detected <- detect_features(exp, data_type="tss")

}
\seealso{
\code{\link{annotate_features}} to annotate the TSSs and TSRs.
\code{\link{plot_detected_features}} to plot numbers of detected features.
}
