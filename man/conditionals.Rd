% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_conditionals.R
\name{conditionals}
\alias{conditionals}
\title{Data Conditions Input}
\usage{
conditionals(
  data_filters = NULL,
  data_ordering = ordering(),
  data_quantiling = quantiling(),
  data_grouping = NULL
)
}
\arguments{
\item{data_filters}{Logical statements to filter data by columns.}

\item{data_ordering}{Ordering object with order settings.
See ?ordering for more information.}

\item{data_quantiling}{Quantiling object with quantile settings.
See ?quantiling for more information.}

\item{data_grouping}{If quantiles not set,
split data by the specified categorical variable.}
}
\value{
'data_conditions' object for input to the corresponding
  'data_conditions' argument in select functions.
}
\description{
This function allows advanced filtering, ordering, quantilihng,
  and/or grouping of data for plotting.
}
\details{
It may be desirable to analyze certain subsets of TSSs or TSRs, or split the data 
based on various categorical variables. This function extends the flexibility of 
various other functions by adding the ability to filter, quantile, order, and/or 
group data prior to downstream analysis.

'data_filters' should be a logical statement to filter TSSs or TSRs
  by any column stored in the data.
'data_ordering' takes an 'ordering' object as input,
  which allows ordering of data by one or more columns.
'data_quantiling' takes a 'quantiling' object as input,
  and will split plots by the given number of quantiles.
'data_grouping' will split a splot by the given column if
  quantiling is not set.
}
\examples{
TSSs <- system.file("extdata", "S288C_TSSs.RDS", package="TSRexploreR")
TSSs <- readRDS(TSSs)

tsre <- TSSs[1] \%>\%
  tsr_explorer \%>\%
  format_counts(data_type="tss") \%>\%
  tss_clustering(threshold=3) \%>\%
  associate_with_tsr \%>\%
  tsr_metrics

# Sequence logo of TSSs from peaked TSRs.
conditions <- conditionals(shape_class == "peaked")
\donttest{plot_sequence_logo(tsre, data_conditions=conditions)}

# Sequence base color plot sorted by descending score.
conditions <- conditionals(data_ordering=ordering(desc(score)))
\donttest{plot_sequence_colormap(tsre, data_conditions=conditions)}

# Sequence logo split by TSS score quantile.
conditions <- conditionals(data_quantiling=quantiling(score))
\donttest{plot_sequence_logo(tsre, data_conditions=conditions)}

# Sequence logo split by class of TSR.
conditions <- conditionals(data_grouping=shape_class)
\donttest{plot_sequence_logo(tsre, data_conditions=conditions)}

}
\seealso{
\code{\link{ordering}} for ordering information.
\code{\link{quantiling}} for quantiling information.
}
