% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dinucleotide.R
\name{plot_dinucleotide_frequencies}
\alias{plot_dinucleotide_frequencies}
\title{Dinucleotide Analysis}
\usage{
plot_dinucleotide_frequencies(
  experiment,
  genome_assembly = NULL,
  samples = "all",
  threshold = NULL,
  use_normalized = FALSE,
  dominant = FALSE,
  data_conditions = NULL,
  ncol = 3,
  return_table = FALSE,
  ...
)
}
\arguments{
\item{experiment}{TSRexploreR object.}

\item{genome_assembly}{Genome assembly in FASTA or BSgenome format.}

\item{samples}{A vector of sample names to analyze.}

\item{threshold}{TSSs or TSRs with a score below this value will not be considered.}

\item{use_normalized}{Whether to use the normalized (TRUE) or raw (FALSE) counts.}

\item{dominant}{If TRUE, will only consider the highest-scoring TSS per gene, transcript, or TSR or 
highest-scoring TSR per gene or transcript.}

\item{data_conditions}{Apply advanced conditions to the data.}

\item{ncol}{Integer specifying the number of columns to arrange multiple plots.}

\item{return_table}{Return a table of results instead of a plot.}

\item{...}{Arguments passed to geom_col}
}
\value{
DataFrame with dinucleotide frequencies
}
\description{
Analysis of -1 and +1 dinucleotide frequencies.
}
\details{
It has been shown in many organisms that particular base preferences exist at the
 -1 and +1 positions, where +1 is the TSS and -1 is the position immediately upstream.
This function returns the dinucleotide frequencies at each TSS.

'genome_assembly' must be a valid genome assembly in either fasta or BSgenome format.
fasta formatted genome assemblies should have the file extension '.fasta' or '.fa'.
BSgenome assemblies are precompiled Bioconductor libraries for common organisms.

A set of arguments to control data structure for plotting are included.
'threshold' will define the minimum number of raw counts a TSS or TSR
 must have to be considered.
'dominant' specifies whether only the dominant TSS should be considered 
  from the 'mark_dominant' function.
For TSSs this can be either dominant per TSR or gene, and for TSRs
  it is just the dominant TSR per gene. (qq should this just be TSSs?)
'data_conditions' allows for the advanced filtering, ordering, and grouping
  of data.
}
\examples{
TSSs <- system.file("extdata", "S288C_TSSs.RDS", package="TSRexploreR")
TSSs <- readRDS(TSSs)
tsre_exp <- tsr_explorer(TSSs)
tsre_exp <- format_counts(tsre_exp, data_type="tss")
assembly <- system.file("extdata", "S288C_Assembly.fasta", package="TSRexploreR")
freqs <- dinucleotide_frequencies(tsre_exp, genome_assembly=assembly)

}
\seealso{
\code{\link{plot_dinculeotide_frequencies}} to plot the dinucleotide frequencies.
}
